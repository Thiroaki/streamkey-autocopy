name: Build

on:
  push:
    tags:
      - "v*.*.*"

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        node: ["14"]

    steps:
      - name: Set version
        id: version
        run: |
          $REPOSITORY = "${{ github.repository }}".split("/")[-1]
          $VERSION = "${{ github.ref }}".split("/")[-1]
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=repo::$REPOSITORY"
          echo "::set-output name=filename::$REPOSITORY-$VERSION.zip"
          echo "Repo $REPOSITORY"
          echo "Version $VERSION"

      - uses: actions/checkout@v2

      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Install package
        run: yarn install

      - name: Build and pack app
        run: yarn run pack

      - name: Copy release file
        run: |
          mkdir ${{ steps.version.outputs.repo }}
          cd ./${{ steps.version.outputs.repo }}
          cp -r ../release/win-unpacked/resources ./resources
          cp ../release/win-unpacked/ffmpeg.dll .
          cp ../release/win-unpacked/icudtl.dat .
          cp ../release/win-unpacked/resources.pak .
          cp ../release/win-unpacked/snapshot_blob.bin .
          cp ../release/win-unpacked/streamkey-autocopy.exe .
          cp ../release/win-unpacked/v8_context_snapshot.bin .
          cp ../LICENSE .
          cp ../README.md .
          cd ..

      - name: Archive
        run: Compress-Archive ./${{ steps.version.outputs.repo }} ./${{ steps.version.outputs.filename }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: true
          prerelease: true
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.version.outputs.filename }}
          asset_name: ${{ steps.version.outputs.filename }}
          asset_content_type: application/zip

      - uses: actions/upload-artifact@v2
        with:
          name: build-test
          path: ./${{ steps.version.outputs.filename }}
